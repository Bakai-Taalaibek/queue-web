{"mappings":"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","sources":["src/ReactIndividualCharacterInputBoxes.js","src/fillPolyfill.js","src/InputBox.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport fillPolyfill from './fillPolyfill'\nimport InputBox from './InputBox'\n\nclass ReactIndividualCharacterInputBoxes extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { characterArray: Array(props.amount).fill(null) }\n\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleFocus = this.handleFocus.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleOnPaste = this.handleOnPaste.bind(this)\n    this.inputElements = {}\n    fillPolyfill\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.inputElements['input0'].select()\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (\n      this.props.amount !== nextProps.amount ||\n      this.props.inputRegExp !== nextProps.inputRegExp\n    ) {\n      return true\n    }\n    return false\n  }\n\n  renderItems() {\n    let items = []\n    let inputProps = this.props.inputProps || {}\n\n    for (var i = 0; i < this.props.amount; i++) {\n      items.push(\n        <InputBox\n          type={this.props.password ? 'password' : 'text'}\n          key={i}\n          handleKeyDown={this.handleKeyDown}\n          handleFocus={this.handleFocus}\n          handleChange={this.handleChange}\n          handleOnPaste={this.handleOnPaste}\n          name={'input' + i}\n          inputProps={inputProps[i] || inputProps}\n          inputRef={el => {\n            if (!el) return\n            this.inputElements[el.name] = el\n          }}\n        />\n      )\n    }\n\n    return items\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.renderItems()}</div>\n      </div>\n    )\n  }\n\n  handleChange({ target }) {\n    if (target.value.match(this.props.inputRegExp)) {\n      this.focusNextChar(target)\n      this.setModuleOutput(target)\n    } else {\n      target.value = this.state.characterArray[target.name.replace('input', '')]\n    }\n  }\n\n  handleKeyDown({ target, key }) {\n    if (key === 'Backspace') {\n      if (target.value === '' && target.previousElementSibling !== null) {\n        target.previousElementSibling.value = ''\n        this.focusPrevChar(target)\n      } else {\n        target.value = ''\n      }\n      this.setModuleOutput(target)\n    } else if (key === 'ArrowLeft') {\n      this.focusPrevChar(target)\n    } else if (key === 'ArrowRight' || key === ' ') {\n      this.focusNextChar(target)\n    }\n  }\n\n  handleFocus({ target }) {\n    var el = target\n    // In most browsers .select() does not work without the added timeout.\n    setTimeout(function () {\n      el.select()\n    }, 0)\n  }\n\n  handleOnPaste(event) {\n    event.preventDefault()\n    const pasted = event.clipboardData.getData(\"text/plain\")\n    let pastedArray = pasted.split(\"\").slice(0, this.props.amount)\n    for (var i = 0; i < pastedArray.length; i++) {\n      if (pastedArray[i].match(this.props.inputRegExp)) {\n        this.inputElements['input' + i].value = pastedArray[i]\n      }\n      else break;\n    }\n    if (i <= this.props.amount - 1) this.inputElements['input' + i].focus()\n    else this.inputElements['input' + (this.props.amount - 1)].focus()\n    this.setModuleOutput()\n  }\n\n  focusPrevChar(target) {\n    if (target.previousElementSibling !== null) {\n      target.previousElementSibling.focus()\n    }\n  }\n\n  focusNextChar(target) {\n    if (target.nextElementSibling !== null) {\n      target.nextElementSibling.focus()\n    }\n  }\n\n  setModuleOutput() {\n    this.setState(prevState => {\n      let updatedCharacters = prevState.characterArray.map((character, number) => {\n        return this.inputElements['input' + number].value\n      })\n      return { characterArray: updatedCharacters }\n    }, () => this.props.handleOutputString(this.state.characterArray.join('')))\n  }\n}\n\nReactIndividualCharacterInputBoxes.defaultProps = {\n  amount: 5,\n  autoFocus: false,\n  inputRegExp: /^[0-9]$/,\n  password: false\n}\nReactIndividualCharacterInputBoxes.propTypes = {\n  amount: PropTypes.number,\n  autoFocus: PropTypes.bool,\n  inputRegExp: PropTypes.instanceOf(RegExp),\n  password: PropTypes.bool,\n  handleOutputString: PropTypes.func.isRequired\n}\n\nexport default ReactIndividualCharacterInputBoxes\n","// Array.fill() is not supported by IE. This Polyfill fixes that problem.\n\nif (!Array.prototype.fill) {\n    Object.defineProperty(Array.prototype, 'fill', {\n      value: function(value) {\n  \n        // Steps 1-2.\n        if (this == null) {\n          throw new TypeError('this is null or not defined');\n        }\n  \n        var O = Object(this);\n  \n        // Steps 3-5.\n        var len = O.length >>> 0;\n  \n        // Steps 6-7.\n        var start = arguments[1];\n        var relativeStart = start >> 0;\n  \n        // Step 8.\n        var k = relativeStart < 0 ?\n          Math.max(len + relativeStart, 0) :\n          Math.min(relativeStart, len);\n  \n        // Steps 9-10.\n        var end = arguments[2];\n        var relativeEnd = end === undefined ?\n          len : end >> 0;\n  \n        // Step 11.\n        var finalValue = relativeEnd < 0 ?\n          Math.max(len + relativeEnd, 0) :\n          Math.min(relativeEnd, len);\n  \n        // Step 12.\n        while (k < finalValue) {\n          O[k] = value;\n          k++;\n        }\n  \n        // Step 13.\n        return O;\n      }\n    });\n  }","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nconst Input = styled.input`\n  justify-content: space-between;\n  width: 45px;\n  height: 45px;\n  margin: 5px;\n  border-radius: 5px;\n  text-align: center;\n  font-size: 34px;\n  font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue',\n    Arial sans-serif;\n`\n\nconst InputBox = ({ type, handleKeyDown, handleChange, handleFocus, handleOnPaste, name, inputRef, inputProps }) => {\n  return (\n    <Input\n      {...inputProps}\n      type={type}\n      onKeyDown={handleKeyDown}\n      onChange={handleChange}\n      onFocus={handleFocus}\n      onPaste={handleOnPaste}\n      maxLength='1'\n      name={name}\n      ref={inputRef}\n    />\n  )\n\n}\n\nInputBox.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  handleKeyDown: PropTypes.func,\n  handleFocus: PropTypes.func,\n  handleOnPaste: PropTypes.func,\n  handleChange: PropTypes.func,\n  inputRef: PropTypes.func,\n  inputProps: PropTypes.object\n}\n\nexport default InputBox\n"],"names":[],"version":3,"file":"ReactIndividualCharacterInputBoxes.js.map"}